// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/cityList": {
            "get": {
                "description": "Get all cities avaliable for forecast",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetCityList",
                "operationId": "apiGetCityList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/full_info/{cityName}/{date}": {
            "get": {
                "description": "Show full weather info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "FullInfo",
                "operationId": "fullInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City name",
                        "name": "cityName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/L3WB.AllCityInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/shortInfo/{cityName}": {
            "get": {
                "description": "Show short weather info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ShortCityInfo",
                "operationId": "shortInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City name",
                        "name": "cityName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/L3WB.ShortCityInfoApiAnswer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "L3WB.AllCityInfo": {
            "type": "object",
            "properties": {
                "clouds": {
                    "type": "object",
                    "properties": {
                        "all": {
                            "type": "integer"
                        }
                    }
                },
                "dt": {
                    "type": "integer"
                },
                "dt_txt": {
                    "type": "string"
                },
                "main": {
                    "type": "object",
                    "properties": {
                        "feels_like": {
                            "type": "number"
                        },
                        "grnd_level": {
                            "type": "integer"
                        },
                        "humidity": {
                            "type": "integer"
                        },
                        "pressure": {
                            "type": "integer"
                        },
                        "sea_level": {
                            "type": "integer"
                        },
                        "temp": {
                            "type": "number"
                        },
                        "temp_kf": {
                            "type": "number"
                        },
                        "temp_max": {
                            "type": "number"
                        },
                        "temp_min": {
                            "type": "number"
                        }
                    }
                },
                "pop": {
                    "type": "number"
                },
                "rain": {
                    "type": "object",
                    "properties": {
                        "3h": {
                            "type": "number"
                        }
                    }
                },
                "sys": {
                    "type": "object",
                    "properties": {
                        "pod": {
                            "type": "string"
                        }
                    }
                },
                "visibility": {
                    "type": "integer"
                },
                "weather": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "icon": {
                                "type": "string"
                            },
                            "id": {
                                "type": "integer"
                            },
                            "main": {
                                "type": "string"
                            }
                        }
                    }
                },
                "wind": {
                    "type": "object",
                    "properties": {
                        "deg": {
                            "type": "integer"
                        },
                        "gust": {
                            "type": "number"
                        },
                        "speed": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "L3WB.ShortCityInfoApiAnswer": {
            "type": "object",
            "properties": {
                "avgTemp": {
                    "type": "number"
                },
                "cityName": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "date": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Weather forecast",
	Description:      "This is a simple api that shows a weather forecast.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
